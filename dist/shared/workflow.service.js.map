{"version":3,"file":"workflow.service.js","sourceRoot":"","sources":["../../tmp/shared/workflow.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAG/D,8BAA8B;AAC9B,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,0CAA0C;AAE1C,UAAU;AACV,gDAAgD;AAChD,gDAAgD;AAGhD;IASE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN5B,cAAS,GAAG,WAAW,CAAC;QAExB,qBAAgB,GAAG,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QACtE,qBAAgB,GAAG,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QAClE,qBAAgB,GAAG,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;IAG1E,CAAC;IAED,qCAAW,GAAX;QACE,0CAA0C;QAC1C,IAAM,OAAO,GAAG,IAAI,WAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACpE,CAAC;;gBAhBF,UAAU;;;;gBAZF,UAAU;;IAyCnB,sBAAC;CAAA,AA7BD,IA6BC;SA5BY,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Headers, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n// Import envirnoment variable\nimport { environment } from '../environments/environment';\n// import { Workflow } from '../workflow';\n\n// Classes\n// import { Email } from '../data/system/email';\n// import { User } from '../data/identity/user';\n\n\n@Injectable()\nexport class WorkflowService {\n\n  private baseRoute = '/workflow';\n\n  private URL_GET_DIAGRAMS = environment.API_URL + this.baseRoute + '/diagrams';\n  private URL_SAVE_DIAGRAM = environment.API_URL + this.baseRoute + '/save';\n  private URL_LOAD_DIAGRAM = environment.API_URL + this.baseRoute + '/load';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getDiagrams() {\n    // const body = JSON.stringify({ email });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.get(this.URL_GET_DIAGRAMS, { headers: headers });\n  }\n\n  // loadDiagram(email) {\n  //   const body = JSON.stringify({ email });\n  //   const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  //   return this.http.post(this.URL_LOAD_DIAGRAM, body, { headers: headers });\n  // }\n\n  // saveDiagram(workflow: Workflow) {\n  //   const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  //   return this.http.post(this.URL_SAVE_DIAGRAM, workflow, { headers: headers });\n  // }\n}\n"]}